{"version":3,"sources":["../../src/query-presets/constraints.ts"],"sourcesContent":["import { getTranslation } from '@payloadcms/translations'\n\nimport type { Config } from '../config/types.js'\nimport type { Field } from '../fields/config/types.js'\n\nimport { fieldAffectsData } from '../fields/config/types.js'\nimport { toWords } from '../utilities/formatLabels.js'\nimport { preventLockout } from './preventLockout.js'\nimport { operations, type QueryPresetConstraint } from './types.js'\n\nexport const getConstraints = (config: Config): Field => ({\n  name: 'access',\n  type: 'group',\n  admin: {\n    components: {\n      Cell: '@payloadcms/ui#QueryPresetsAccessCell',\n    },\n    condition: (data) => Boolean(data?.isShared),\n  },\n  fields: operations.map((operation) => ({\n    type: 'collapsible',\n    fields: [\n      {\n        name: operation,\n        type: 'group',\n        admin: {\n          hideGutter: true,\n        },\n        fields: [\n          {\n            name: 'constraint',\n            type: 'select',\n            defaultValue: 'onlyMe',\n            label: ({ i18n }) =>\n              `Specify who can ${operation} this ${getTranslation(config.queryPresets?.labels?.singular || 'Preset', i18n)}`,\n            options: [\n              {\n                label: 'Everyone',\n                value: 'everyone',\n              },\n              {\n                label: 'Only Me',\n                value: 'onlyMe',\n              },\n              {\n                label: 'Specific Users',\n                value: 'specificUsers',\n              },\n              ...(config?.queryPresets?.constraints?.[operation]?.map(\n                (option: QueryPresetConstraint) => ({\n                  label: option.label,\n                  value: option.value,\n                }),\n              ) || []),\n            ],\n          },\n          {\n            name: 'users',\n            type: 'relationship',\n            admin: {\n              condition: (data) =>\n                Boolean(data?.access?.[operation]?.constraint === 'specificUsers'),\n            },\n            hasMany: true,\n            hooks: {\n              beforeChange: [\n                ({ data, req }) => {\n                  if (data?.access?.[operation]?.constraint === 'onlyMe') {\n                    if (req.user) {\n                      return [req.user.id]\n                    }\n                  }\n\n                  return data?.access?.[operation]?.users\n                },\n              ],\n            },\n            relationTo: config.admin?.user ?? 'users', // TODO: remove this fallback when the args are properly typed as `SanitizedConfig`\n          },\n          ...(config?.queryPresets?.constraints?.[operation]?.reduce(\n            (acc: Field[], option: QueryPresetConstraint) => {\n              option.fields?.forEach((field, index) => {\n                acc.push({ ...field })\n\n                if (fieldAffectsData(field)) {\n                  acc[index].admin = {\n                    ...(acc[index]?.admin || {}),\n                    condition: (data) =>\n                      Boolean(data?.access?.[operation]?.constraint === option.value),\n                  }\n                }\n              })\n\n              return acc\n            },\n            [] as Field[],\n          ) || []),\n        ],\n        label: false,\n      },\n    ],\n    label: () => toWords(operation),\n  })),\n  label: 'Sharing settings',\n  validate: preventLockout,\n})\n"],"names":["getTranslation","fieldAffectsData","toWords","preventLockout","operations","getConstraints","config","name","type","admin","components","Cell","condition","data","Boolean","isShared","fields","map","operation","hideGutter","defaultValue","label","i18n","queryPresets","labels","singular","options","value","constraints","option","access","constraint","hasMany","hooks","beforeChange","req","user","id","users","relationTo","reduce","acc","forEach","field","index","push","validate"],"mappings":"AAAA,SAASA,cAAc,QAAQ,2BAA0B;AAKzD,SAASC,gBAAgB,QAAQ,4BAA2B;AAC5D,SAASC,OAAO,QAAQ,+BAA8B;AACtD,SAASC,cAAc,QAAQ,sBAAqB;AACpD,SAASC,UAAU,QAAoC,aAAY;AAEnE,OAAO,MAAMC,iBAAiB,CAACC,SAA2B,CAAA;QACxDC,MAAM;QACNC,MAAM;QACNC,OAAO;YACLC,YAAY;gBACVC,MAAM;YACR;YACAC,WAAW,CAACC,OAASC,QAAQD,MAAME;QACrC;QACAC,QAAQZ,WAAWa,GAAG,CAAC,CAACC,YAAe,CAAA;gBACrCV,MAAM;gBACNQ,QAAQ;oBACN;wBACET,MAAMW;wBACNV,MAAM;wBACNC,OAAO;4BACLU,YAAY;wBACd;wBACAH,QAAQ;4BACN;gCACET,MAAM;gCACNC,MAAM;gCACNY,cAAc;gCACdC,OAAO,CAAC,EAAEC,IAAI,EAAE,GACd,CAAC,gBAAgB,EAAEJ,UAAU,MAAM,EAAElB,eAAeM,OAAOiB,YAAY,EAAEC,QAAQC,YAAY,UAAUH,OAAO;gCAChHI,SAAS;oCACP;wCACEL,OAAO;wCACPM,OAAO;oCACT;oCACA;wCACEN,OAAO;wCACPM,OAAO;oCACT;oCACA;wCACEN,OAAO;wCACPM,OAAO;oCACT;uCACIrB,QAAQiB,cAAcK,aAAa,CAACV,UAAU,EAAED,IAClD,CAACY,SAAmC,CAAA;4CAClCR,OAAOQ,OAAOR,KAAK;4CACnBM,OAAOE,OAAOF,KAAK;wCACrB,CAAA,MACG,EAAE;iCACR;4BACH;4BACA;gCACEpB,MAAM;gCACNC,MAAM;gCACNC,OAAO;oCACLG,WAAW,CAACC,OACVC,QAAQD,MAAMiB,QAAQ,CAACZ,UAAU,EAAEa,eAAe;gCACtD;gCACAC,SAAS;gCACTC,OAAO;oCACLC,cAAc;wCACZ,CAAC,EAAErB,IAAI,EAAEsB,GAAG,EAAE;4CACZ,IAAItB,MAAMiB,QAAQ,CAACZ,UAAU,EAAEa,eAAe,UAAU;gDACtD,IAAII,IAAIC,IAAI,EAAE;oDACZ,OAAO;wDAACD,IAAIC,IAAI,CAACC,EAAE;qDAAC;gDACtB;4CACF;4CAEA,OAAOxB,MAAMiB,QAAQ,CAACZ,UAAU,EAAEoB;wCACpC;qCACD;gCACH;gCACAC,YAAYjC,OAAOG,KAAK,EAAE2B,QAAQ;4BACpC;+BACI9B,QAAQiB,cAAcK,aAAa,CAACV,UAAU,EAAEsB,OAClD,CAACC,KAAcZ;gCACbA,OAAOb,MAAM,EAAE0B,QAAQ,CAACC,OAAOC;oCAC7BH,IAAII,IAAI,CAAC;wCAAE,GAAGF,KAAK;oCAAC;oCAEpB,IAAI1C,iBAAiB0C,QAAQ;wCAC3BF,GAAG,CAACG,MAAM,CAACnC,KAAK,GAAG;4CACjB,GAAIgC,GAAG,CAACG,MAAM,EAAEnC,SAAS,CAAC,CAAC;4CAC3BG,WAAW,CAACC,OACVC,QAAQD,MAAMiB,QAAQ,CAACZ,UAAU,EAAEa,eAAeF,OAAOF,KAAK;wCAClE;oCACF;gCACF;gCAEA,OAAOc;4BACT,GACA,EAAE,KACC,EAAE;yBACR;wBACDpB,OAAO;oBACT;iBACD;gBACDA,OAAO,IAAMnB,QAAQgB;YACvB,CAAA;QACAG,OAAO;QACPyB,UAAU3C;IACZ,CAAA,EAAE"}