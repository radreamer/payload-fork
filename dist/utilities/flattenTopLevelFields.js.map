{"version":3,"sources":["../../src/utilities/flattenTopLevelFields.ts"],"sourcesContent":["// @ts-strict-ignore\nimport type { ClientTab } from '../admin/fields/Tabs.js'\nimport type { ClientField } from '../fields/config/client.js'\nimport type {\n  Field,\n  FieldAffectingData,\n  FieldAffectingDataClient,\n  FieldPresentationalOnly,\n  FieldPresentationalOnlyClient,\n  Tab,\n} from '../fields/config/types.js'\n\nimport {\n  fieldAffectsData,\n  fieldHasSubFields,\n  fieldIsPresentationalOnly,\n  tabHasName,\n} from '../fields/config/types.js'\n\ntype FlattenedField<TField> = TField extends ClientField\n  ? FieldAffectingDataClient | FieldPresentationalOnlyClient\n  : FieldAffectingData | FieldPresentationalOnly\n\ntype TabType<TField> = TField extends ClientField ? ClientTab : Tab\n\n/**\n * Flattens a collection's fields into a single array of fields, as long\n * as the fields do not affect data.\n *\n * @param fields\n * @param keepPresentationalFields if true, will skip flattening fields that are presentational only\n */\nfunction flattenFields<TField extends ClientField | Field>(\n  fields: TField[],\n  keepPresentationalFields?: boolean,\n): FlattenedField<TField>[] {\n  return fields.reduce<FlattenedField<TField>[]>((acc, field) => {\n    if (fieldAffectsData(field) || (keepPresentationalFields && fieldIsPresentationalOnly(field))) {\n      acc.push(field as FlattenedField<TField>)\n    } else if (fieldHasSubFields(field)) {\n      acc.push(...flattenFields(field.fields as TField[], keepPresentationalFields))\n    } else if (field.type === 'tabs' && 'tabs' in field) {\n      return [\n        ...acc,\n        ...field.tabs.reduce<FlattenedField<TField>[]>((tabFields, tab: TabType<TField>) => {\n          if (tabHasName(tab)) {\n            return [...tabFields, { ...tab, type: 'tab' } as unknown as FlattenedField<TField>]\n          } else {\n            return [\n              ...tabFields,\n              ...flattenFields(tab.fields as TField[], keepPresentationalFields),\n            ]\n          }\n        }, []),\n      ]\n    }\n\n    return acc\n  }, [])\n}\n\nexport default flattenFields\n"],"names":["fieldAffectsData","fieldHasSubFields","fieldIsPresentationalOnly","tabHasName","flattenFields","fields","keepPresentationalFields","reduce","acc","field","push","type","tabs","tabFields","tab"],"mappings":"AAAA,oBAAoB;AAYpB,SACEA,gBAAgB,EAChBC,iBAAiB,EACjBC,yBAAyB,EACzBC,UAAU,QACL,4BAA2B;AAQlC;;;;;;CAMC,GACD,SAASC,cACPC,MAAgB,EAChBC,wBAAkC;IAElC,OAAOD,OAAOE,MAAM,CAA2B,CAACC,KAAKC;QACnD,IAAIT,iBAAiBS,UAAWH,4BAA4BJ,0BAA0BO,QAAS;YAC7FD,IAAIE,IAAI,CAACD;QACX,OAAO,IAAIR,kBAAkBQ,QAAQ;YACnCD,IAAIE,IAAI,IAAIN,cAAcK,MAAMJ,MAAM,EAAcC;QACtD,OAAO,IAAIG,MAAME,IAAI,KAAK,UAAU,UAAUF,OAAO;YACnD,OAAO;mBACFD;mBACAC,MAAMG,IAAI,CAACL,MAAM,CAA2B,CAACM,WAAWC;oBACzD,IAAIX,WAAWW,MAAM;wBACnB,OAAO;+BAAID;4BAAW;gCAAE,GAAGC,GAAG;gCAAEH,MAAM;4BAAM;yBAAuC;oBACrF,OAAO;wBACL,OAAO;+BACFE;+BACAT,cAAcU,IAAIT,MAAM,EAAcC;yBAC1C;oBACH;gBACF,GAAG,EAAE;aACN;QACH;QAEA,OAAOE;IACT,GAAG,EAAE;AACP;AAEA,eAAeJ,cAAa"}