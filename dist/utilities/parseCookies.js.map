{"version":3,"sources":["../../src/utilities/parseCookies.ts"],"sourcesContent":["// @ts-strict-ignore\nimport { APIError } from '../errors/APIError.js'\n\nexport const parseCookies = (headers: Request['headers']): Map<string, string> => {\n  const list = new Map<string, string>()\n  const rc = headers.get('Cookie')\n\n  if (rc) {\n    rc.split(';').forEach((cookie) => {\n      const parts = cookie.split('=')\n      const key = parts.shift().trim()\n      const encodedValue = parts.join('=')\n\n      try {\n        const decodedValue = decodeURI(encodedValue)\n        list.set(key, decodedValue)\n      } catch (e) {\n        throw new APIError(`Error decoding cookie value for key ${key}: ${e.message}`)\n      }\n    })\n  }\n\n  return list\n}\n"],"names":["APIError","parseCookies","headers","list","Map","rc","get","split","forEach","cookie","parts","key","shift","trim","encodedValue","join","decodedValue","decodeURI","set","e","message"],"mappings":"AAAA,oBAAoB;AACpB,SAASA,QAAQ,QAAQ,wBAAuB;AAEhD,OAAO,MAAMC,eAAe,CAACC;IAC3B,MAAMC,OAAO,IAAIC;IACjB,MAAMC,KAAKH,QAAQI,GAAG,CAAC;IAEvB,IAAID,IAAI;QACNA,GAAGE,KAAK,CAAC,KAAKC,OAAO,CAAC,CAACC;YACrB,MAAMC,QAAQD,OAAOF,KAAK,CAAC;YAC3B,MAAMI,MAAMD,MAAME,KAAK,GAAGC,IAAI;YAC9B,MAAMC,eAAeJ,MAAMK,IAAI,CAAC;YAEhC,IAAI;gBACF,MAAMC,eAAeC,UAAUH;gBAC/BX,KAAKe,GAAG,CAACP,KAAKK;YAChB,EAAE,OAAOG,GAAG;gBACV,MAAM,IAAInB,SAAS,CAAC,oCAAoC,EAAEW,IAAI,EAAE,EAAEQ,EAAEC,OAAO,EAAE;YAC/E;QACF;IACF;IAEA,OAAOjB;AACT,EAAC"}