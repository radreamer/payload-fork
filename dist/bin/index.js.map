{"version":3,"sources":["../../src/bin/index.ts"],"sourcesContent":["// @ts-strict-ignore\n/* eslint-disable no-console */\nimport { Cron } from 'croner'\nimport minimist from 'minimist'\nimport { pathToFileURL } from 'node:url'\nimport path from 'path'\n\nimport type { BinScript } from '../config/types.js'\n\nimport { findConfig } from '../config/find.js'\nimport payload, { getPayload } from '../index.js'\nimport { generateImportMap } from './generateImportMap/index.js'\nimport { generateTypes } from './generateTypes.js'\nimport { info } from './info.js'\nimport { loadEnv } from './loadEnv.js'\nimport { migrate, availableCommands as migrateCommands } from './migrate.js'\n\n// Note: this does not account for any user bin scripts\nconst availableScripts = [\n  'generate:db-schema',\n  'generate:importmap',\n  'generate:types',\n  'info',\n  'jobs:run',\n  'run',\n  ...migrateCommands,\n] as const\n\nexport const bin = async () => {\n  loadEnv()\n\n  const args = minimist(process.argv.slice(2))\n  const script = (typeof args._[0] === 'string' ? args._[0] : '').toLowerCase()\n\n  if (script === 'info') {\n    await info()\n    return\n  }\n\n  if (script === 'run') {\n    const scriptPath = args._[1]\n    if (!scriptPath) {\n      console.error('Please provide a script path to run.')\n      process.exit(1)\n    }\n\n    const absoluteScriptPath = path.resolve(process.cwd(), scriptPath)\n\n    // Modify process.argv to remove 'run' and the script path\n    const originalArgv = process.argv\n    process.argv = [process.argv[0], process.argv[1], ...args._.slice(2)]\n\n    try {\n      await import(pathToFileURL(absoluteScriptPath).toString())\n    } catch (error) {\n      console.error(`Error running script: ${absoluteScriptPath}`)\n      console.error(error)\n      process.exit(1)\n    } finally {\n      // Restore original process.argv\n      process.argv = originalArgv\n    }\n    return\n  }\n\n  const configPath = findConfig()\n  const configPromise = await import(pathToFileURL(configPath).toString())\n  let config = await configPromise\n  if (config.default) {\n    config = await config.default\n  }\n\n  const userBinScript = Array.isArray(config.bin)\n    ? config.bin.find(({ key }) => key === script)\n    : false\n\n  if (userBinScript) {\n    try {\n      const module = await import(pathToFileURL(userBinScript.scriptPath).toString())\n\n      if (!module.script || typeof module.script !== 'function') {\n        console.error(\n          `Could not find \"script\" function export for script ${userBinScript.key} in ${userBinScript.scriptPath}`,\n        )\n      } else {\n        await module.script(config).catch((err: unknown) => {\n          console.log(`Script ${userBinScript.key} failed, details:`)\n          console.error(err)\n        })\n      }\n    } catch (err) {\n      console.log(`Could not find associated bin script for the ${userBinScript.key} command`)\n      console.error(err)\n    }\n\n    return\n  }\n\n  if (script.startsWith('migrate')) {\n    return migrate({ config, parsedArgs: args }).then(() => process.exit(0))\n  }\n\n  if (script === 'generate:types') {\n    return generateTypes(config)\n  }\n\n  if (script === 'generate:importmap') {\n    return generateImportMap(config)\n  }\n\n  if (script === 'jobs:run') {\n    const payload = await getPayload({ config })\n    const limit = args.limit ? parseInt(args.limit, 10) : undefined\n    const queue = args.queue ? args.queue : undefined\n\n    if (args.cron) {\n      new Cron(args.cron, async () => {\n        await payload.jobs.run({\n          limit,\n          queue,\n        })\n      })\n\n      process.stdin.resume() // Keep the process alive\n\n      return\n    } else {\n      await payload.jobs.run({\n        limit,\n        queue,\n      })\n\n      await payload.db.destroy() // close database connections after running jobs so process can exit cleanly\n\n      return\n    }\n  }\n\n  if (script === 'generate:db-schema') {\n    // Barebones instance to access database adapter, without connecting to the DB\n    await payload.init({\n      config,\n      disableDBConnect: true,\n      disableOnInit: true,\n    })\n\n    if (typeof payload.db.generateSchema !== 'function') {\n      payload.logger.error({\n        msg: `${payload.db.packageName} does not support database schema generation`,\n      })\n\n      process.exit(1)\n    }\n\n    await payload.db.generateSchema({\n      log: args.log === 'false' ? false : true,\n      prettify: args.prettify === 'false' ? false : true,\n    })\n\n    process.exit(0)\n  }\n\n  console.error(script ? `Unknown command: \"${script}\"` : 'Please provide a command to run')\n  console.log(`\\nAvailable commands:\\n${availableScripts.map((c) => `  - ${c}`).join('\\n')}`)\n\n  process.exit(1)\n}\n"],"names":["Cron","minimist","pathToFileURL","path","findConfig","payload","getPayload","generateImportMap","generateTypes","info","loadEnv","migrate","availableCommands","migrateCommands","availableScripts","bin","args","process","argv","slice","script","_","toLowerCase","scriptPath","console","error","exit","absoluteScriptPath","resolve","cwd","originalArgv","toString","configPath","configPromise","config","default","userBinScript","Array","isArray","find","key","module","catch","err","log","startsWith","parsedArgs","then","limit","parseInt","undefined","queue","cron","jobs","run","stdin","resume","db","destroy","init","disableDBConnect","disableOnInit","generateSchema","logger","msg","packageName","prettify","map","c","join"],"mappings":"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"}