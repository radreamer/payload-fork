{"version":3,"sources":["../../../src/auth/endpoints/me.ts"],"sourcesContent":["// @ts-strict-ignore\nimport { status as httpStatus } from 'http-status'\n\nimport type { PayloadHandler } from '../../config/types.js'\n\nimport { getRequestCollection } from '../../utilities/getRequestEntity.js'\nimport { headersWithCors } from '../../utilities/headersWithCors.js'\nimport { extractJWT } from '../extractJWT.js'\nimport { meOperation } from '../operations/me.js'\n\nexport const meHandler: PayloadHandler = async (req) => {\n  const collection = getRequestCollection(req)\n  const currentToken = extractJWT(req)\n\n  const result = await meOperation({\n    collection,\n    currentToken,\n    req,\n  })\n\n  if (collection.config.auth.removeTokenFromResponses) {\n    delete result.token\n  }\n\n  return Response.json(\n    {\n      ...result,\n      message: req.t('authentication:account'),\n    },\n    {\n      headers: headersWithCors({\n        headers: new Headers(),\n        req,\n      }),\n      status: httpStatus.OK,\n    },\n  )\n}\n"],"names":["status","httpStatus","getRequestCollection","headersWithCors","extractJWT","meOperation","meHandler","req","collection","currentToken","result","config","auth","removeTokenFromResponses","token","Response","json","message","t","headers","Headers","OK"],"mappings":"AAAA,oBAAoB;AACpB,SAASA,UAAUC,UAAU,QAAQ,cAAa;AAIlD,SAASC,oBAAoB,QAAQ,sCAAqC;AAC1E,SAASC,eAAe,QAAQ,qCAAoC;AACpE,SAASC,UAAU,QAAQ,mBAAkB;AAC7C,SAASC,WAAW,QAAQ,sBAAqB;AAEjD,OAAO,MAAMC,YAA4B,OAAOC;IAC9C,MAAMC,aAAaN,qBAAqBK;IACxC,MAAME,eAAeL,WAAWG;IAEhC,MAAMG,SAAS,MAAML,YAAY;QAC/BG;QACAC;QACAF;IACF;IAEA,IAAIC,WAAWG,MAAM,CAACC,IAAI,CAACC,wBAAwB,EAAE;QACnD,OAAOH,OAAOI,KAAK;IACrB;IAEA,OAAOC,SAASC,IAAI,CAClB;QACE,GAAGN,MAAM;QACTO,SAASV,IAAIW,CAAC,CAAC;IACjB,GACA;QACEC,SAAShB,gBAAgB;YACvBgB,SAAS,IAAIC;YACbb;QACF;QACAP,QAAQC,WAAWoB,EAAE;IACvB;AAEJ,EAAC"}