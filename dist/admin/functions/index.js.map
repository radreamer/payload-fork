{"version":3,"sources":["../../../src/admin/functions/index.ts"],"sourcesContent":["import type { ImportMap } from '../../bin/generateImportMap/index.js'\nimport type { SanitizedConfig } from '../../config/types.js'\nimport type { PaginatedDocs } from '../../database/types.js'\nimport type { CollectionSlug, ColumnPreference } from '../../index.js'\nimport type { PayloadRequest, Sort, Where } from '../../types/index.js'\nimport type { ColumnsFromURL } from '../../utilities/transformColumnPreferences.js'\n\nexport type DefaultServerFunctionArgs = {\n  importMap: ImportMap\n  req: PayloadRequest\n}\n\nexport type ServerFunctionArgs = {\n  args: Record<string, unknown>\n  name: string\n}\n\nexport type ServerFunctionClientArgs = {\n  args: Record<string, unknown>\n  name: string\n}\n\nexport type ServerFunctionClient = (args: ServerFunctionClientArgs) => Promise<unknown> | unknown\n\nexport type ServerFunction = (\n  args: DefaultServerFunctionArgs & ServerFunctionClientArgs['args'],\n) => Promise<unknown> | unknown\n\nexport type ServerFunctionConfig = {\n  fn: ServerFunction\n  name: string\n}\n\nexport type ServerFunctionHandler = (\n  args: {\n    config: Promise<SanitizedConfig> | SanitizedConfig\n    importMap: ImportMap\n  } & ServerFunctionClientArgs,\n) => Promise<unknown>\n\nexport type ListQuery = {\n  /*\n   * This is an of strings, i.e. `['title', '-slug']`\n   * Use `transformColumnsToPreferences` and `transformColumnsToSearchParams` to convert it back and forth\n   */\n  columns?: ColumnsFromURL\n  limit?: string\n  page?: string\n  preset?: number | string\n  /*\n    When provided, is automatically injected into the `where` object\n  */\n  search?: string\n  sort?: Sort\n  where?: Where\n}\n\nexport type BuildTableStateArgs = {\n  collectionSlug: string | string[]\n  columns?: ColumnPreference[]\n  docs?: PaginatedDocs['docs']\n  enableRowSelections?: boolean\n  orderableFieldName: string\n  parent?: {\n    collectionSlug: CollectionSlug\n    id: number | string\n    joinPath: string\n  }\n  query?: ListQuery\n  renderRowTypes?: boolean\n  req: PayloadRequest\n  tableAppearance?: 'condensed' | 'default'\n}\n"],"names":[],"mappings":"AAyDA,WAeC"}