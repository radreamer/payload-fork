{"version":3,"sources":["../../../../../src/queues/operations/runJobs/runJob/getUpdateJobFunction.ts"],"sourcesContent":["// @ts-strict-ignore\nimport type { PayloadRequest } from '../../../../types/index.js'\nimport type { BaseJob } from '../../../config/types/workflowTypes.js'\n\nimport { updateJob } from '../../../utilities/updateJob.js'\n\nexport type UpdateJobFunction = (jobData: Partial<BaseJob>) => Promise<BaseJob>\n\nexport function getUpdateJobFunction(job: BaseJob, req: PayloadRequest): UpdateJobFunction {\n  return async (jobData) => {\n    const updatedJob = await updateJob({\n      id: job.id,\n      data: jobData,\n      depth: req.payload.config.jobs.depth,\n      disableTransaction: true,\n      req,\n    })\n\n    // Update job object like this to modify the original object - that way, incoming changes (e.g. taskStatus field that will be re-generated through the hook) will be reflected in the calling function\n    for (const key in updatedJob) {\n      if (key === 'log') {\n        if (!job.log) {\n          job.log = []\n        }\n        // Add all new log entries to the original job.log object. Do not delete any existing log entries.\n        // Do not update existing log entries, as existing log entries should be immutable.\n        for (const logEntry of updatedJob.log) {\n          if (!job.log.some((entry) => entry.id === logEntry.id)) {\n            job.log.push(logEntry)\n          }\n        }\n      } else {\n        job[key] = updatedJob[key]\n      }\n    }\n\n    if ((updatedJob.error as Record<string, unknown>)?.cancelled) {\n      const cancelledError = new Error('Job cancelled') as { cancelled: boolean } & Error\n      cancelledError.cancelled = true\n      throw cancelledError\n    }\n\n    return updatedJob\n  }\n}\n"],"names":["updateJob","getUpdateJobFunction","job","req","jobData","updatedJob","id","data","depth","payload","config","jobs","disableTransaction","key","log","logEntry","some","entry","push","error","cancelled","cancelledError","Error"],"mappings":"AAAA,oBAAoB;AAIpB,SAASA,SAAS,QAAQ,kCAAiC;AAI3D,OAAO,SAASC,qBAAqBC,GAAY,EAAEC,GAAmB;IACpE,OAAO,OAAOC;QACZ,MAAMC,aAAa,MAAML,UAAU;YACjCM,IAAIJ,IAAII,EAAE;YACVC,MAAMH;YACNI,OAAOL,IAAIM,OAAO,CAACC,MAAM,CAACC,IAAI,CAACH,KAAK;YACpCI,oBAAoB;YACpBT;QACF;QAEA,sMAAsM;QACtM,IAAK,MAAMU,OAAOR,WAAY;YAC5B,IAAIQ,QAAQ,OAAO;gBACjB,IAAI,CAACX,IAAIY,GAAG,EAAE;oBACZZ,IAAIY,GAAG,GAAG,EAAE;gBACd;gBACA,kGAAkG;gBAClG,mFAAmF;gBACnF,KAAK,MAAMC,YAAYV,WAAWS,GAAG,CAAE;oBACrC,IAAI,CAACZ,IAAIY,GAAG,CAACE,IAAI,CAAC,CAACC,QAAUA,MAAMX,EAAE,KAAKS,SAAST,EAAE,GAAG;wBACtDJ,IAAIY,GAAG,CAACI,IAAI,CAACH;oBACf;gBACF;YACF,OAAO;gBACLb,GAAG,CAACW,IAAI,GAAGR,UAAU,CAACQ,IAAI;YAC5B;QACF;QAEA,IAAKR,WAAWc,KAAK,EAA8BC,WAAW;YAC5D,MAAMC,iBAAiB,IAAIC,MAAM;YACjCD,eAAeD,SAAS,GAAG;YAC3B,MAAMC;QACR;QAEA,OAAOhB;IACT;AACF"}