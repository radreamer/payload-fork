{"version":3,"sources":["../../../../../src/queues/operations/runJobs/runJob/calculateBackoffWaitUntil.ts"],"sourcesContent":["import type { RetryConfig } from '../../../config/types/taskTypes.js'\n\nexport function calculateBackoffWaitUntil({\n  retriesConfig,\n  totalTried,\n}: {\n  retriesConfig: number | RetryConfig\n  totalTried: number\n}): Date {\n  let waitUntil: Date = new Date()\n  if (typeof retriesConfig === 'object') {\n    if (retriesConfig.backoff) {\n      if (retriesConfig.backoff.type === 'fixed') {\n        waitUntil = retriesConfig.backoff.delay\n          ? new Date(new Date().getTime() + retriesConfig.backoff.delay)\n          : new Date()\n      } else if (retriesConfig.backoff.type === 'exponential') {\n        // 2 ^ (attempts - 1) * delay (current attempt is not included in totalTried, thus no need for -1)\n        const delay = retriesConfig.backoff.delay ? retriesConfig.backoff.delay : 0\n        waitUntil = new Date(new Date().getTime() + Math.pow(2, totalTried) * delay)\n      }\n    }\n  }\n\n  /*\n  const differenceInMSBetweenNowAndWaitUntil = waitUntil.getTime() - new Date().getTime()\n\n  const differenceInSBetweenNowAndWaitUntil = differenceInMSBetweenNowAndWaitUntil / 1000\n  console.log('Calculated backoff', {\n    differenceInMSBetweenNowAndWaitUntil,\n    differenceInSBetweenNowAndWaitUntil,\n    retriesConfig,\n    totalTried,\n  })*/\n  return waitUntil\n}\n"],"names":["calculateBackoffWaitUntil","retriesConfig","totalTried","waitUntil","Date","backoff","type","delay","getTime","Math","pow"],"mappings":"AAEA,OAAO,SAASA,0BAA0B,EACxCC,aAAa,EACbC,UAAU,EAIX;IACC,IAAIC,YAAkB,IAAIC;IAC1B,IAAI,OAAOH,kBAAkB,UAAU;QACrC,IAAIA,cAAcI,OAAO,EAAE;YACzB,IAAIJ,cAAcI,OAAO,CAACC,IAAI,KAAK,SAAS;gBAC1CH,YAAYF,cAAcI,OAAO,CAACE,KAAK,GACnC,IAAIH,KAAK,IAAIA,OAAOI,OAAO,KAAKP,cAAcI,OAAO,CAACE,KAAK,IAC3D,IAAIH;YACV,OAAO,IAAIH,cAAcI,OAAO,CAACC,IAAI,KAAK,eAAe;gBACvD,kGAAkG;gBAClG,MAAMC,QAAQN,cAAcI,OAAO,CAACE,KAAK,GAAGN,cAAcI,OAAO,CAACE,KAAK,GAAG;gBAC1EJ,YAAY,IAAIC,KAAK,IAAIA,OAAOI,OAAO,KAAKC,KAAKC,GAAG,CAAC,GAAGR,cAAcK;YACxE;QACF;IACF;IAEA;;;;;;;;;IASE,GACF,OAAOJ;AACT"}