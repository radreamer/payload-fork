{"version":3,"sources":["../../../src/collections/endpoints/find.ts"],"sourcesContent":["// @ts-strict-ignore\nimport { status as httpStatus } from 'http-status'\n\nimport type { PayloadHandler } from '../../config/types.js'\nimport type { JoinQuery, Where } from '../../types/index.js'\n\nimport { getRequestCollection } from '../../utilities/getRequestEntity.js'\nimport { headersWithCors } from '../../utilities/headersWithCors.js'\nimport { isNumber } from '../../utilities/isNumber.js'\nimport { sanitizeJoinParams } from '../../utilities/sanitizeJoinParams.js'\nimport { sanitizePopulateParam } from '../../utilities/sanitizePopulateParam.js'\nimport { sanitizeSelectParam } from '../../utilities/sanitizeSelectParam.js'\nimport { findOperation } from '../operations/find.js'\n\nexport const findHandler: PayloadHandler = async (req) => {\n  const collection = getRequestCollection(req)\n  const { depth, draft, joins, limit, page, pagination, populate, select, sort, where } =\n    req.query as {\n      depth?: string\n      draft?: string\n      joins?: JoinQuery\n      limit?: string\n      page?: string\n      pagination?: string\n      populate?: Record<string, unknown>\n      select?: Record<string, unknown>\n      sort?: string\n      where?: Where\n    }\n\n  const result = await findOperation({\n    collection,\n    depth: isNumber(depth) ? Number(depth) : undefined,\n    draft: draft === 'true',\n    joins: sanitizeJoinParams(joins),\n    limit: isNumber(limit) ? Number(limit) : undefined,\n    page: isNumber(page) ? Number(page) : undefined,\n    pagination: pagination === 'false' ? false : undefined,\n    populate: sanitizePopulateParam(populate),\n    req,\n    select: sanitizeSelectParam(select),\n    sort: typeof sort === 'string' ? sort.split(',') : undefined,\n    where,\n  })\n\n  return Response.json(result, {\n    headers: headersWithCors({\n      headers: new Headers(),\n      req,\n    }),\n    status: httpStatus.OK,\n  })\n}\n"],"names":["status","httpStatus","getRequestCollection","headersWithCors","isNumber","sanitizeJoinParams","sanitizePopulateParam","sanitizeSelectParam","findOperation","findHandler","req","collection","depth","draft","joins","limit","page","pagination","populate","select","sort","where","query","result","Number","undefined","split","Response","json","headers","Headers","OK"],"mappings":"AAAA,oBAAoB;AACpB,SAASA,UAAUC,UAAU,QAAQ,cAAa;AAKlD,SAASC,oBAAoB,QAAQ,sCAAqC;AAC1E,SAASC,eAAe,QAAQ,qCAAoC;AACpE,SAASC,QAAQ,QAAQ,8BAA6B;AACtD,SAASC,kBAAkB,QAAQ,wCAAuC;AAC1E,SAASC,qBAAqB,QAAQ,2CAA0C;AAChF,SAASC,mBAAmB,QAAQ,yCAAwC;AAC5E,SAASC,aAAa,QAAQ,wBAAuB;AAErD,OAAO,MAAMC,cAA8B,OAAOC;IAChD,MAAMC,aAAaT,qBAAqBQ;IACxC,MAAM,EAAEE,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEC,IAAI,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAE,GACnFX,IAAIY,KAAK;IAaX,MAAMC,SAAS,MAAMf,cAAc;QACjCG;QACAC,OAAOR,SAASQ,SAASY,OAAOZ,SAASa;QACzCZ,OAAOA,UAAU;QACjBC,OAAOT,mBAAmBS;QAC1BC,OAAOX,SAASW,SAASS,OAAOT,SAASU;QACzCT,MAAMZ,SAASY,QAAQQ,OAAOR,QAAQS;QACtCR,YAAYA,eAAe,UAAU,QAAQQ;QAC7CP,UAAUZ,sBAAsBY;QAChCR;QACAS,QAAQZ,oBAAoBY;QAC5BC,MAAM,OAAOA,SAAS,WAAWA,KAAKM,KAAK,CAAC,OAAOD;QACnDJ;IACF;IAEA,OAAOM,SAASC,IAAI,CAACL,QAAQ;QAC3BM,SAAS1B,gBAAgB;YACvB0B,SAAS,IAAIC;YACbpB;QACF;QACAV,QAAQC,WAAW8B,EAAE;IACvB;AACF,EAAC"}