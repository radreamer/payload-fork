{"version":3,"sources":["../../../src/collections/config/client.ts"],"sourcesContent":["// @ts-strict-ignore\nimport type { I18nClient } from '@payloadcms/translations'\n\nimport type { StaticDescription } from '../../admin/types.js'\nimport type { ImportMap } from '../../bin/generateImportMap/index.js'\nimport type {\n  LivePreviewConfig,\n  ServerOnlyLivePreviewProperties,\n  StaticLabel,\n} from '../../config/types.js'\nimport type { ClientField } from '../../fields/config/client.js'\nimport type { Payload } from '../../types/index.js'\nimport type { SanitizedUploadConfig } from '../../uploads/types.js'\nimport type { SanitizedCollectionConfig } from './types.js'\n\nimport { createClientFields } from '../../fields/config/client.js'\n\nexport type ServerOnlyCollectionProperties = keyof Pick<\n  SanitizedCollectionConfig,\n  | 'access'\n  | 'custom'\n  | 'endpoints'\n  | 'flattenedFields'\n  | 'hooks'\n  | 'indexes'\n  | 'joins'\n  | 'polymorphicJoins'\n  | 'sanitizedIndexes'\n>\n\nexport type ServerOnlyCollectionAdminProperties = keyof Pick<\n  SanitizedCollectionConfig['admin'],\n  'baseListFilter' | 'components' | 'hidden'\n>\n\nexport type ServerOnlyUploadProperties = keyof Pick<\n  SanitizedCollectionConfig['upload'],\n  | 'adminThumbnail'\n  | 'externalFileHeaderFilter'\n  | 'handlers'\n  | 'modifyResponseHeaders'\n  | 'withMetadata'\n>\n\nexport type ClientCollectionConfig = {\n  admin: {\n    description?: StaticDescription\n    livePreview?: Omit<LivePreviewConfig, ServerOnlyLivePreviewProperties>\n    preview?: boolean\n  } & Omit<\n    SanitizedCollectionConfig['admin'],\n    | 'components'\n    | 'description'\n    | 'joins'\n    | 'livePreview'\n    | 'preview'\n    | ServerOnlyCollectionAdminProperties\n  >\n  auth?: { verify?: true } & Omit<\n    SanitizedCollectionConfig['auth'],\n    'forgotPassword' | 'strategies' | 'verify'\n  >\n  fields: ClientField[]\n  labels: {\n    plural: StaticLabel\n    singular: StaticLabel\n  }\n} & Omit<\n  SanitizedCollectionConfig,\n  'admin' | 'auth' | 'fields' | 'labels' | ServerOnlyCollectionProperties\n>\n\nconst serverOnlyCollectionProperties: Partial<ServerOnlyCollectionProperties>[] = [\n  'hooks',\n  'access',\n  'endpoints',\n  'custom',\n  'joins',\n  'polymorphicJoins',\n  'flattenedFields',\n  'indexes',\n  'sanitizedIndexes',\n  // `upload`\n  // `admin`\n  // are all handled separately\n]\n\nconst serverOnlyUploadProperties: Partial<ServerOnlyUploadProperties>[] = [\n  'adminThumbnail',\n  'externalFileHeaderFilter',\n  'handlers',\n  'modifyResponseHeaders',\n  'withMetadata',\n]\n\nconst serverOnlyCollectionAdminProperties: Partial<ServerOnlyCollectionAdminProperties>[] = [\n  'hidden',\n  'baseListFilter',\n  'components',\n  // 'preview' is handled separately\n  // `livePreview` is handled separately\n]\n\nexport const createClientCollectionConfig = ({\n  collection,\n  defaultIDType,\n  i18n,\n  importMap,\n}: {\n  collection: SanitizedCollectionConfig\n  defaultIDType: Payload['config']['db']['defaultIDType']\n  i18n: I18nClient\n  importMap: ImportMap\n}): ClientCollectionConfig => {\n  const clientCollection = {} as Partial<ClientCollectionConfig>\n\n  for (const key in collection) {\n    if (serverOnlyCollectionProperties.includes(key as any)) {\n      continue\n    }\n    switch (key) {\n      case 'admin':\n        if (!collection.admin) {\n          break\n        }\n        clientCollection.admin = {} as ClientCollectionConfig['admin']\n        for (const adminKey in collection.admin) {\n          if (serverOnlyCollectionAdminProperties.includes(adminKey as any)) {\n            continue\n          }\n\n          switch (adminKey) {\n            case 'description':\n              if (\n                typeof collection.admin.description === 'string' ||\n                typeof collection.admin.description === 'object'\n              ) {\n                if (collection.admin.description) {\n                  clientCollection.admin.description = collection.admin.description\n                }\n              } else if (typeof collection.admin.description === 'function') {\n                const description = collection.admin.description({ t: i18n.t })\n                if (description) {\n                  clientCollection.admin.description = description\n                }\n              }\n              break\n            case 'livePreview':\n              clientCollection.admin.livePreview =\n                {} as ClientCollectionConfig['admin']['livePreview']\n              if (collection.admin.livePreview.breakpoints) {\n                clientCollection.admin.livePreview.breakpoints =\n                  collection.admin.livePreview.breakpoints\n              }\n              break\n            case 'preview':\n              if (collection.admin.preview) {\n                clientCollection.admin.preview = true\n              }\n              break\n            default:\n              clientCollection.admin[adminKey] = collection.admin[adminKey]\n          }\n        }\n        break\n      case 'auth':\n        if (!collection.auth) {\n          break\n        }\n        clientCollection.auth = {} as { verify?: true } & SanitizedCollectionConfig['auth']\n        if (collection.auth.cookies) {\n          clientCollection.auth.cookies = collection.auth.cookies\n        }\n        if (collection.auth.depth !== undefined) {\n          // Check for undefined as it can be a number (0)\n          clientCollection.auth.depth = collection.auth.depth\n        }\n        if (collection.auth.disableLocalStrategy) {\n          clientCollection.auth.disableLocalStrategy = collection.auth.disableLocalStrategy\n        }\n        if (collection.auth.lockTime !== undefined) {\n          // Check for undefined as it can be a number (0)\n          clientCollection.auth.lockTime = collection.auth.lockTime\n        }\n        if (collection.auth.loginWithUsername) {\n          clientCollection.auth.loginWithUsername = collection.auth.loginWithUsername\n        }\n        if (collection.auth.maxLoginAttempts !== undefined) {\n          // Check for undefined as it can be a number (0)\n          clientCollection.auth.maxLoginAttempts = collection.auth.maxLoginAttempts\n        }\n        if (collection.auth.removeTokenFromResponses) {\n          clientCollection.auth.removeTokenFromResponses = collection.auth.removeTokenFromResponses\n        }\n\n        if (collection.auth.useAPIKey) {\n          clientCollection.auth.useAPIKey = collection.auth.useAPIKey\n        }\n        if (collection.auth.tokenExpiration) {\n          clientCollection.auth.tokenExpiration = collection.auth.tokenExpiration\n        }\n        if (collection.auth.verify) {\n          clientCollection.auth.verify = true\n        }\n        break\n      case 'fields':\n        clientCollection.fields = createClientFields({\n          defaultIDType,\n          fields: collection.fields,\n          i18n,\n          importMap,\n        })\n        break\n      case 'labels':\n        clientCollection.labels = {\n          plural:\n            typeof collection.labels.plural === 'function'\n              ? collection.labels.plural({ i18n, t: i18n.t })\n              : collection.labels.plural,\n          singular:\n            typeof collection.labels.singular === 'function'\n              ? collection.labels.singular({ i18n, t: i18n.t })\n              : collection.labels.singular,\n        }\n        break\n      case 'upload':\n        if (!collection.upload) {\n          break\n        }\n        clientCollection.upload = {} as SanitizedUploadConfig\n        for (const uploadKey in collection.upload) {\n          if (serverOnlyUploadProperties.includes(uploadKey as any)) {\n            continue\n          }\n          if (uploadKey === 'imageSizes') {\n            clientCollection.upload.imageSizes = collection.upload.imageSizes.map((size) => {\n              const sanitizedSize = { ...size }\n              if ('generateImageName' in sanitizedSize) {\n                delete sanitizedSize.generateImageName\n              }\n              return sanitizedSize\n            })\n          } else {\n            clientCollection.upload[uploadKey] = collection.upload[uploadKey]\n          }\n        }\n        break\n\n      default:\n        clientCollection[key] = collection[key]\n    }\n  }\n\n  return clientCollection as ClientCollectionConfig\n}\n\nexport const createClientCollectionConfigs = ({\n  collections,\n  defaultIDType,\n  i18n,\n  importMap,\n}: {\n  collections: SanitizedCollectionConfig[]\n  defaultIDType: Payload['config']['db']['defaultIDType']\n  i18n: I18nClient\n  importMap: ImportMap\n}): ClientCollectionConfig[] => {\n  const clientCollections = new Array(collections.length)\n\n  for (let i = 0; i < collections.length; i++) {\n    const collection = collections[i]\n\n    clientCollections[i] = createClientCollectionConfig({\n      collection,\n      defaultIDType,\n      i18n,\n      importMap,\n    })\n  }\n\n  return clientCollections\n}\n"],"names":["createClientFields","serverOnlyCollectionProperties","serverOnlyUploadProperties","serverOnlyCollectionAdminProperties","createClientCollectionConfig","collection","defaultIDType","i18n","importMap","clientCollection","key","includes","admin","adminKey","description","t","livePreview","breakpoints","preview","auth","cookies","depth","undefined","disableLocalStrategy","lockTime","loginWithUsername","maxLoginAttempts","removeTokenFromResponses","useAPIKey","tokenExpiration","verify","fields","labels","plural","singular","upload","uploadKey","imageSizes","map","size","sanitizedSize","generateImageName","createClientCollectionConfigs","collections","clientCollections","Array","length","i"],"mappings":"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"}