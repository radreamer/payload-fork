{"version":3,"sources":["../../../src/collections/operations/restoreVersion.ts"],"sourcesContent":["// @ts-strict-ignore\nimport { status as httpStatus } from 'http-status'\n\nimport type { FindOneArgs } from '../../database/types.js'\nimport type { PayloadRequest, PopulateType, SelectType } from '../../types/index.js'\nimport type { Collection, TypeWithID } from '../config/types.js'\n\nimport executeAccess from '../../auth/executeAccess.js'\nimport { hasWhereAccessResult } from '../../auth/types.js'\nimport { combineQueries } from '../../database/combineQueries.js'\nimport { APIError, Forbidden, NotFound } from '../../errors/index.js'\nimport { afterChange } from '../../fields/hooks/afterChange/index.js'\nimport { afterRead } from '../../fields/hooks/afterRead/index.js'\nimport { killTransaction } from '../../utilities/killTransaction.js'\nimport { sanitizeSelect } from '../../utilities/sanitizeSelect.js'\nimport { getLatestCollectionVersion } from '../../versions/getLatestCollectionVersion.js'\n\nexport type Arguments = {\n  collection: Collection\n  currentDepth?: number\n  depth?: number\n  disableErrors?: boolean\n  draft?: boolean\n  id: number | string\n  overrideAccess?: boolean\n  populate?: PopulateType\n  req: PayloadRequest\n  select?: SelectType\n  showHiddenFields?: boolean\n}\n\nexport const restoreVersionOperation = async <TData extends TypeWithID = any>(\n  args: Arguments,\n): Promise<TData> => {\n  const {\n    id,\n    collection: { config: collectionConfig },\n    depth,\n    draft,\n    overrideAccess = false,\n    populate,\n    req,\n    req: { fallbackLocale, locale, payload },\n    select: incomingSelect,\n    showHiddenFields,\n  } = args\n\n  try {\n    if (!id) {\n      throw new APIError('Missing ID of version to restore.', httpStatus.BAD_REQUEST)\n    }\n\n    // /////////////////////////////////////\n    // Retrieve original raw version\n    // /////////////////////////////////////\n\n    const { docs: versionDocs } = await req.payload.db.findVersions({\n      collection: collectionConfig.slug,\n      limit: 1,\n      locale,\n      pagination: false,\n      req,\n      where: { id: { equals: id } },\n    })\n\n    const [rawVersion] = versionDocs\n\n    if (!rawVersion) {\n      throw new NotFound(req.t)\n    }\n\n    const parentDocID = rawVersion.parent\n\n    // /////////////////////////////////////\n    // Access\n    // /////////////////////////////////////\n\n    const accessResults = !overrideAccess\n      ? await executeAccess({ id: parentDocID, req }, collectionConfig.access.update)\n      : true\n    const hasWherePolicy = hasWhereAccessResult(accessResults)\n\n    // /////////////////////////////////////\n    // Retrieve document\n    // /////////////////////////////////////\n\n    const findOneArgs: FindOneArgs = {\n      collection: collectionConfig.slug,\n      locale,\n      req,\n      where: combineQueries({ id: { equals: parentDocID } }, accessResults),\n    }\n\n    const doc = await req.payload.db.findOne(findOneArgs)\n\n    if (!doc && !hasWherePolicy) {\n      throw new NotFound(req.t)\n    }\n    if (!doc && hasWherePolicy) {\n      throw new Forbidden(req.t)\n    }\n\n    // /////////////////////////////////////\n    // fetch previousDoc\n    // /////////////////////////////////////\n\n    const prevDocWithLocales = await getLatestCollectionVersion({\n      id: parentDocID,\n      config: collectionConfig,\n      payload,\n      query: findOneArgs,\n      req,\n    })\n\n    // /////////////////////////////////////\n    // Update\n    // /////////////////////////////////////\n\n    const select = sanitizeSelect({\n      fields: collectionConfig.flattenedFields,\n      forceSelect: collectionConfig.forceSelect,\n      select: incomingSelect,\n    })\n\n    let result = await req.payload.db.updateOne({\n      id: parentDocID,\n      collection: collectionConfig.slug,\n      data: rawVersion.version,\n      req,\n      select,\n    })\n\n    // /////////////////////////////////////\n    // Save `previousDoc` as a version after restoring\n    // /////////////////////////////////////\n\n    const prevVersion = { ...prevDocWithLocales }\n\n    delete prevVersion.id\n\n    await payload.db.createVersion({\n      autosave: false,\n      collectionSlug: collectionConfig.slug,\n      createdAt: prevVersion.createdAt,\n      parent: parentDocID,\n      req,\n      updatedAt: new Date().toISOString(),\n      versionData: draft ? { ...rawVersion.version, _status: 'draft' } : rawVersion.version,\n    })\n\n    // /////////////////////////////////////\n    // afterRead - Fields\n    // /////////////////////////////////////\n\n    result = await afterRead({\n      collection: collectionConfig,\n      context: req.context,\n      depth,\n      doc: result,\n      draft: undefined,\n      fallbackLocale,\n      global: null,\n      locale,\n      overrideAccess,\n      populate,\n      req,\n      select,\n      showHiddenFields,\n    })\n\n    // /////////////////////////////////////\n    // afterRead - Collection\n    // /////////////////////////////////////\n\n    if (collectionConfig.hooks?.afterRead?.length) {\n      for (const hook of collectionConfig.hooks.afterRead) {\n        result =\n          (await hook({\n            collection: collectionConfig,\n            context: req.context,\n            doc: result,\n            req,\n          })) || result\n      }\n    }\n\n    // /////////////////////////////////////\n    // afterChange - Fields\n    // /////////////////////////////////////\n\n    result = await afterChange({\n      collection: collectionConfig,\n      context: req.context,\n      data: result,\n      doc: result,\n      global: null,\n      operation: 'update',\n      previousDoc: prevDocWithLocales,\n      req,\n    })\n\n    // /////////////////////////////////////\n    // afterChange - Collection\n    // /////////////////////////////////////\n\n    if (collectionConfig.hooks?.afterChange?.length) {\n      for (const hook of collectionConfig.hooks.afterChange) {\n        result =\n          (await hook({\n            collection: collectionConfig,\n            context: req.context,\n            doc: result,\n            operation: 'update',\n            previousDoc: prevDocWithLocales,\n            req,\n          })) || result\n      }\n    }\n\n    return result\n  } catch (error: unknown) {\n    await killTransaction(req)\n    throw error\n  }\n}\n"],"names":["status","httpStatus","executeAccess","hasWhereAccessResult","combineQueries","APIError","Forbidden","NotFound","afterChange","afterRead","killTransaction","sanitizeSelect","getLatestCollectionVersion","restoreVersionOperation","args","id","collection","config","collectionConfig","depth","draft","overrideAccess","populate","req","fallbackLocale","locale","payload","select","incomingSelect","showHiddenFields","BAD_REQUEST","docs","versionDocs","db","findVersions","slug","limit","pagination","where","equals","rawVersion","t","parentDocID","parent","accessResults","access","update","hasWherePolicy","findOneArgs","doc","findOne","prevDocWithLocales","query","fields","flattenedFields","forceSelect","result","updateOne","data","version","prevVersion","createVersion","autosave","collectionSlug","createdAt","updatedAt","Date","toISOString","versionData","_status","context","undefined","global","hooks","length","hook","operation","previousDoc","error"],"mappings":"AAAA,oBAAoB;AACpB,SAASA,UAAUC,UAAU,QAAQ,cAAa;AAMlD,OAAOC,mBAAmB,8BAA6B;AACvD,SAASC,oBAAoB,QAAQ,sBAAqB;AAC1D,SAASC,cAAc,QAAQ,mCAAkC;AACjE,SAASC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,wBAAuB;AACrE,SAASC,WAAW,QAAQ,0CAAyC;AACrE,SAASC,SAAS,QAAQ,wCAAuC;AACjE,SAASC,eAAe,QAAQ,qCAAoC;AACpE,SAASC,cAAc,QAAQ,oCAAmC;AAClE,SAASC,0BAA0B,QAAQ,+CAA8C;AAgBzF,OAAO,MAAMC,0BAA0B,OACrCC;IAEA,MAAM,EACJC,EAAE,EACFC,YAAY,EAAEC,QAAQC,gBAAgB,EAAE,EACxCC,KAAK,EACLC,KAAK,EACLC,iBAAiB,KAAK,EACtBC,QAAQ,EACRC,GAAG,EACHA,KAAK,EAAEC,cAAc,EAAEC,MAAM,EAAEC,OAAO,EAAE,EACxCC,QAAQC,cAAc,EACtBC,gBAAgB,EACjB,GAAGf;IAEJ,IAAI;QACF,IAAI,CAACC,IAAI;YACP,MAAM,IAAIV,SAAS,qCAAqCJ,WAAW6B,WAAW;QAChF;QAEA,wCAAwC;QACxC,gCAAgC;QAChC,wCAAwC;QAExC,MAAM,EAAEC,MAAMC,WAAW,EAAE,GAAG,MAAMT,IAAIG,OAAO,CAACO,EAAE,CAACC,YAAY,CAAC;YAC9DlB,YAAYE,iBAAiBiB,IAAI;YACjCC,OAAO;YACPX;YACAY,YAAY;YACZd;YACAe,OAAO;gBAAEvB,IAAI;oBAAEwB,QAAQxB;gBAAG;YAAE;QAC9B;QAEA,MAAM,CAACyB,WAAW,GAAGR;QAErB,IAAI,CAACQ,YAAY;YACf,MAAM,IAAIjC,SAASgB,IAAIkB,CAAC;QAC1B;QAEA,MAAMC,cAAcF,WAAWG,MAAM;QAErC,wCAAwC;QACxC,SAAS;QACT,wCAAwC;QAExC,MAAMC,gBAAgB,CAACvB,iBACnB,MAAMnB,cAAc;YAAEa,IAAI2B;YAAanB;QAAI,GAAGL,iBAAiB2B,MAAM,CAACC,MAAM,IAC5E;QACJ,MAAMC,iBAAiB5C,qBAAqByC;QAE5C,wCAAwC;QACxC,oBAAoB;QACpB,wCAAwC;QAExC,MAAMI,cAA2B;YAC/BhC,YAAYE,iBAAiBiB,IAAI;YACjCV;YACAF;YACAe,OAAOlC,eAAe;gBAAEW,IAAI;oBAAEwB,QAAQG;gBAAY;YAAE,GAAGE;QACzD;QAEA,MAAMK,MAAM,MAAM1B,IAAIG,OAAO,CAACO,EAAE,CAACiB,OAAO,CAACF;QAEzC,IAAI,CAACC,OAAO,CAACF,gBAAgB;YAC3B,MAAM,IAAIxC,SAASgB,IAAIkB,CAAC;QAC1B;QACA,IAAI,CAACQ,OAAOF,gBAAgB;YAC1B,MAAM,IAAIzC,UAAUiB,IAAIkB,CAAC;QAC3B;QAEA,wCAAwC;QACxC,oBAAoB;QACpB,wCAAwC;QAExC,MAAMU,qBAAqB,MAAMvC,2BAA2B;YAC1DG,IAAI2B;YACJzB,QAAQC;YACRQ;YACA0B,OAAOJ;YACPzB;QACF;QAEA,wCAAwC;QACxC,SAAS;QACT,wCAAwC;QAExC,MAAMI,SAAShB,eAAe;YAC5B0C,QAAQnC,iBAAiBoC,eAAe;YACxCC,aAAarC,iBAAiBqC,WAAW;YACzC5B,QAAQC;QACV;QAEA,IAAI4B,SAAS,MAAMjC,IAAIG,OAAO,CAACO,EAAE,CAACwB,SAAS,CAAC;YAC1C1C,IAAI2B;YACJ1B,YAAYE,iBAAiBiB,IAAI;YACjCuB,MAAMlB,WAAWmB,OAAO;YACxBpC;YACAI;QACF;QAEA,wCAAwC;QACxC,kDAAkD;QAClD,wCAAwC;QAExC,MAAMiC,cAAc;YAAE,GAAGT,kBAAkB;QAAC;QAE5C,OAAOS,YAAY7C,EAAE;QAErB,MAAMW,QAAQO,EAAE,CAAC4B,aAAa,CAAC;YAC7BC,UAAU;YACVC,gBAAgB7C,iBAAiBiB,IAAI;YACrC6B,WAAWJ,YAAYI,SAAS;YAChCrB,QAAQD;YACRnB;YACA0C,WAAW,IAAIC,OAAOC,WAAW;YACjCC,aAAahD,QAAQ;gBAAE,GAAGoB,WAAWmB,OAAO;gBAAEU,SAAS;YAAQ,IAAI7B,WAAWmB,OAAO;QACvF;QAEA,wCAAwC;QACxC,qBAAqB;QACrB,wCAAwC;QAExCH,SAAS,MAAM/C,UAAU;YACvBO,YAAYE;YACZoD,SAAS/C,IAAI+C,OAAO;YACpBnD;YACA8B,KAAKO;YACLpC,OAAOmD;YACP/C;YACAgD,QAAQ;YACR/C;YACAJ;YACAC;YACAC;YACAI;YACAE;QACF;QAEA,wCAAwC;QACxC,yBAAyB;QACzB,wCAAwC;QAExC,IAAIX,iBAAiBuD,KAAK,EAAEhE,WAAWiE,QAAQ;YAC7C,KAAK,MAAMC,QAAQzD,iBAAiBuD,KAAK,CAAChE,SAAS,CAAE;gBACnD+C,SACE,AAAC,MAAMmB,KAAK;oBACV3D,YAAYE;oBACZoD,SAAS/C,IAAI+C,OAAO;oBACpBrB,KAAKO;oBACLjC;gBACF,MAAOiC;YACX;QACF;QAEA,wCAAwC;QACxC,uBAAuB;QACvB,wCAAwC;QAExCA,SAAS,MAAMhD,YAAY;YACzBQ,YAAYE;YACZoD,SAAS/C,IAAI+C,OAAO;YACpBZ,MAAMF;YACNP,KAAKO;YACLgB,QAAQ;YACRI,WAAW;YACXC,aAAa1B;YACb5B;QACF;QAEA,wCAAwC;QACxC,2BAA2B;QAC3B,wCAAwC;QAExC,IAAIL,iBAAiBuD,KAAK,EAAEjE,aAAakE,QAAQ;YAC/C,KAAK,MAAMC,QAAQzD,iBAAiBuD,KAAK,CAACjE,WAAW,CAAE;gBACrDgD,SACE,AAAC,MAAMmB,KAAK;oBACV3D,YAAYE;oBACZoD,SAAS/C,IAAI+C,OAAO;oBACpBrB,KAAKO;oBACLoB,WAAW;oBACXC,aAAa1B;oBACb5B;gBACF,MAAOiC;YACX;QACF;QAEA,OAAOA;IACT,EAAE,OAAOsB,OAAgB;QACvB,MAAMpE,gBAAgBa;QACtB,MAAMuD;IACR;AACF,EAAC"}